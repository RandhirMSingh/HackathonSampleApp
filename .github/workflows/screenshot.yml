name: Screenshot Generation

on:
  pull_request:
    branches: [feature/*, main ]

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    #- name: Available Simulators
     # run: xcrun simctl list --json -v
    - name: Take Screenshots
      run: ./script.swift screenshot
    - name: print ls
      run: ls -tree
    - name: change dir
      run: cd screenshots
    - name: list out screenshots
      run: ls -tree
    - name: Archive screenshot to artifact
      uses: actions/upload-artifact@v2
      with:
        name: Screenshots
        path: screenshots/*
  
  Download_Artifact:
    needs: build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      id: download
      with:
        name: Screenshots
        path: screenshots
    - name: 'Echo download path'
      run: echo ${{steps.download.outputs.download-path}}
    
  UploadScreenshots:
    name: Uplaod screenshots to S3 bucket
    needs: build
    #needs: Download_Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        id: download
        with:
          name: Screenshots
          path: screenshots
      #- name: Create test file
      #  run: touch test.txt
      #- name: create file content
      #  run: echo "Test File." -> test.txt 
      #- name: upload to S3
      - uses: RandhirMSingh/S3Manager@main
        with:
          args: --acl public-read
        env:
          FILE:  ${{steps.download.outputs.download-path}}
          AWS_REGION: 'us-east-1'
          S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          S3_KEY: ${{ secrets.S3_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Post Screenshots on PR
        run: echo "Posting screenshot on the PR"
      - shell: bash
        env:
          PR_NUMBER: $(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }} 
        run: |
          echo Token: "$env:GITHUB_TOKEN"
          curl --request POST \
          --url https://api.github.com/repos/"$env:REPO"/issues/"$env:SUPER_SECRET"/comments \
          --header 'authorization: Bearer "$env:GITHUB_TOKEN"' \
          --header 'content-type: application/json' \
          --header 'Accept: application/vnd.github.v3+json' \
          --data '{
            "body": "Test comment from Github action"
            }'
 
